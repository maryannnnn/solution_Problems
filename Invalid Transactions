class Solution {
    public List<String> invalidTransactions(String[] transactions) {
        List<String> invStr = new ArrayList<>();

        for (int i = 0; i < transactions.length; i++) {
            String[] transStr = transactions[i].split(",");

            if (Integer.parseInt(transStr[2]) > 1000) {
                if(!invStr.contains(transactions[i])) {
                    invStr.add(transactions[i]);
                }
            } 
                if (i - 1 >= 0) {
                    for (int j = i - 1; j >= 0; j--) {
                       String[] transTmp = transactions[j].split(",");

                        if (Math.abs(Integer.parseInt(transStr[1]) - Integer.parseInt(transTmp[1])) <= 60) {

                            if (transTmp[0].equals(transStr[0]) && !transTmp[3].equals(transStr[3])) {
                                if (!invStr.contains(transactions[i])) {
                                    invStr.add(transactions[i]);
                                }
                                if (!invStr.contains(transactions[j])) {
                                    invStr.add(transactions[j]);
                                }
                            }
                        }
                    }
                }
        }
    return invStr;
    }
}
