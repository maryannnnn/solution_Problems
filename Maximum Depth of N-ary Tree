/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
   public int maxDepth(Node root) {
    if (root == null) return 0;
    int depth = 0;
    
    return Depth(root, depth);
    }

    public int Depth(Node root, int depth) {
        if (root == null) return 0;
         depth++;
        int depthMax = depth;
        for (int i = 0; i < root.children.size(); i++) {
            Node elem = root.children.get(i);
              if (elem != null) {              
                depthMax = Math.max(depthMax, Depth(elem, depth));
              }   
        }
        
        return depthMax;
    }
}
